/**
 * ng-handsontable 0.13.0
 * 
 * Copyright 2012-2015 Marcin Warpechowski
 * Copyright 2015 Handsoncode sp. z o.o. <hello@handsontable.com>
 * Licensed under the MIT license.
 * https://github.com/handsontable/ngHandsontable
 * Date: Wed Feb 19 2020 21:32:23 GMT-0500 (Eastern Standard Time)
*/


document.all&&!document.addEventListener&&(document.createElement("hot-table"),document.createElement("hot-column"),document.createElement("hot-autocomplete")),angular.module("ngHandsontable.services",[]),angular.module("ngHandsontable.directives",[]),angular.module("ngHandsontable",["ngHandsontable.services","ngHandsontable.directives"]),Handsontable.hooks.add("afterContextMenuShow",function(){Handsontable.EventManager.isHotTableEnv=!1}),function(){function t(h){return{parseAutoComplete:function(u,g,d){u.source=function(t,e){var n=this.instance.getSelectedLast()[0],o=[],a=g[n];if(a){var i=u.optionList;if(i&&i.object){if(angular.isArray(i.object))o=i.object;else{var s=h(i.object)(a);if(angular.isArray(s))if(d)for(var r=0,c=s.length;r<c;r++){var l=s[r][i.property];null!=l&&o.push(l)}else o=s;else o=s}e(o)}}}}}}t.$inject=["$parse"],angular.module("ngHandsontable.services").factory("autoCompleteFactory",t)}(),function(){function t(){var n={};return{getInstance:function(t){return n[t]},registerInstance:function(t,e){n[t]=e},removeInstance:function(t){n[t]=void 0}}}t.$inject=[],angular.module("ngHandsontable.services").factory("hotRegisterer",t)}(),function(){function n(t){return t.replace(/[A-Z]/g,function(t){return"-"+t.charAt(0).toLowerCase()})}function r(t){return t.substr(0,1).toUpperCase()+t.substr(1,t.length-1)}function t(a){return{containerClassName:"handsontable-container",initializeHandsontable:function(t,e){var n,o=document.createElement("div");return o.className=this.containerClassName,e.hotId&&(o.id=e.hotId),t[0].appendChild(o),n=new Handsontable(o,e),e.hotId&&a.registerInstance(e.hotId,n),n},updateHandsontableSettings:function(t,e){t&&t.updateSettings(e)},renderHandsontable:function(t){t&&t.render()},mergeSettingsFromScope:function(t,e){var n,o,a,i=angular.extend({},e);for(t=t||{},angular.extend(i,e.settings||{}),o=0,a=(n=this.getAvailableSettings()).length;o<a;o++)void 0!==i[n[o]]&&(t[n[o]]=i[n[o]]);return t},mergeHooksFromScope:function(t,e){var n,o,a,i,s=angular.extend({},e);for(t=t||{},angular.extend(s,e.settings||{}),o=0,a=(n=this.getAvailableHooks()).length;o<a;o++)i="on"+r(n[o]),"function"!=typeof s[n[o]]&&"function"!=typeof s[i]||(t[n[o]]=s[n[o]]||s[i]);return t},trimScopeDefinitionAccordingToAttrs:function(t,e){for(var n in t)t.hasOwnProperty(n)&&void 0===e[n]&&void 0===e[t[n].substr(1,t[n].length)]&&delete t[n];return t},getTableScopeDefinition:function(){var t={};return this.applyAvailableSettingsScopeDef(t),this.applyAvailableHooksScopeDef(t),t.datarows="=",t.dataschema="=",t.observeDomVisibility="=",t},getColumnScopeDefinition:function(){var t={};return this.applyAvailableSettingsScopeDef(t),t.data="@",t},applyAvailableSettingsScopeDef:function(t){var e,n,o;for(n=0,o=(e=this.getAvailableSettings()).length;n<o;n++)t[e[n]]="=";return t},applyAvailableHooksScopeDef:function(t){var e,n,o;for(n=0,o=(e=this.getAvailableHooks()).length;n<o;n++)t[e[n]]="=on"+r(e[n]);return t},getAvailableSettings:function(t){var e=Object.keys(Handsontable.DefaultSettings.prototype);return-1===e.indexOf("contextMenuCopyPaste")&&e.push("contextMenuCopyPaste"),-1===e.indexOf("handsontable")&&e.push("handsontable"),0<=e.indexOf("settings")&&e.splice(e.indexOf("settings"),1),t&&(e=e.map(n)),e},getAvailableHooks:function(t){var e=Handsontable.hooks.getRegistered();return t&&(e=e.map(function(t){return"on-"+n(t)})),e}}}t.$inject=["hotRegisterer"],angular.module("ngHandsontable.services").factory("settingFactory",t)}(),function(){function t(){return{restrict:"EA",scope:!0,require:"^hotColumn",link:function(t,e,n,o){var a=n.datarows;o.setColumnOptionList(a)}}}t.$inject=[],angular.module("ngHandsontable.directives").directive("hotAutocomplete",t)}(),function(){function t(i){return{restrict:"EA",require:"^hotTable",scope:{},controller:["$scope",function(o){this.setColumnOptionList=function(t){o.column||(o.column={});var e={},n=t.match(/^\s*([\s\S]+?)\s+in\s+([\s\S]+?)\s*$/);n?(e.property=n[1],e.object=n[2]):e.object=t.split(","),o.column.optionList=e}}],compile:function(t,e){var n=this;return this.scope=i.trimScopeDefinitionAccordingToAttrs(i.getColumnScopeDefinition(),e),angular.forEach(Object.keys(this.scope),function(t){n.$$isolateBindings[t]={attrName:t,collection:!1,mode:"data"===t?"@":"=",optional:!1}}),function(t,e,n,o){var a={};angular.forEach(Object.keys(n),function(t){"$"!==t.charAt(0)&&""===n[t]&&(a[t]=!0)}),i.mergeSettingsFromScope(a,t),t.column||(t.column={}),angular.extend(t.column,a),o.setColumnSetting(t.column),t.$on("$destroy",function(){o.removeColumnSetting(t.column)})}}}}t.$inject=["settingFactory"],angular.module("ngHandsontable.directives").directive("hotColumn",t)}(),function(){function t(u,g,d,h){return{restrict:"EA",scope:{},priority:-400,controller:["$scope",function(e){this.setColumnSetting=function(t){e.htSettings||(e.htSettings={}),e.htSettings.columns||(e.htSettings.columns=[]),e.htSettings.columns.push(t),u.updateHandsontableSettings(e.hotInstance,e.htSettings)},this.removeColumnSetting=function(t){-1<e.htSettings.columns.indexOf(t)&&(e.htSettings.columns.splice(e.htSettings.columns.indexOf(t),1),u.updateHandsontableSettings(e.hotInstance,e.htSettings))}}],compile:function(t,e){var l,n=this;return this.scope=u.trimScopeDefinitionAccordingToAttrs(u.getTableScopeDefinition(),e),l=Object.keys(this.scope),angular.forEach(l,function(t){var e=n.scope[t].charAt(0);n.$$isolateBindings[t]={attrName:1<n.scope[t].length?n.scope[t].substr(1,n.scope[t].length):t,collection:"datarows"===t,mode:e,optional:!1}}),function(o,t,e){if(o.settings=h(e.settings)(o.$parent),o.htSettings||(o.htSettings={}),angular.forEach(Object.keys(e),function(t){"$"!==t.charAt(0)&&""===e[t]&&(o.htSettings[t]=!0)}),u.mergeSettingsFromScope(o.htSettings,o),u.mergeHooksFromScope(o.htSettings,o),o.htSettings.data||(o.htSettings.data=o.datarows),o.htSettings.dataSchema=o.dataschema,o.htSettings.hotId=e.hotId,o.htSettings.observeDOMVisibility=o.observeDomVisibility,o.htSettings.columns)for(var n=0,a=o.htSettings.columns.length;n<a;n++){var i=o.htSettings.columns[n];if("autocomplete"===i.type&&i.optionList){if("string"==typeof i.optionList){var s={},r=i.optionList.match(/^\s*([\s\S]+?)\s+in\s+([\s\S]+?)\s*$/);r?(s.property=r[1],s.object=r[2]):s.object=s,i.optionList=s}g.parseAutoComplete(i,o.datarows,!0)}}var c=o.htSettings.afterChange;o.htSettings.afterChange=function(){c&&c.apply(this,arguments),d.$$phase||o.$apply()},o.hotInstance=u.initializeHandsontable(t,o.htSettings),angular.forEach(l,function(n){o.$watch(n,function(t,e){void 0!==t&&("datarows"===n?o.hotInstance.getSettings().data===t?u.renderHandsontable(o.hotInstance):(o.hotInstance.loadData(t),o.htSettings.data=t):t!==e&&(o.htSettings[n]=t,u.updateHandsontableSettings(o.hotInstance,o.htSettings)))},0<=["datarows","columns","rowHeights","colWidths","rowHeaders","colHeaders"].indexOf(n))}),o.$watch("datarows",function(t){void 0!==t&&o.hotInstance.getSettings().data!==t&&o.hotInstance.loadData(t)}),o.$watchCollection("datarows",function(t,e){e&&e.length===o.htSettings.minSpareRows&&t.length!==o.htSettings.minSpareRows&&(o.htSettings.data=o.datarows,u.updateHandsontableSettings(o.hotInstance,o.htSettings))})}}}}t.$inject=["settingFactory","autoCompleteFactory","$rootScope","$parse"],angular.module("ngHandsontable.directives").directive("hotTable",t)}();